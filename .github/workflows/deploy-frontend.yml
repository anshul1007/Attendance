name: Deploy Frontend to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:  # Allow manual trigger
    inputs:
      environment:
        description: 'Environment to deploy (prod, dev, staging)'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - dev
          - staging

env:
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4

    - name: 🎯 Determine Environment
      id: env
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          ENV="${{ github.event.inputs.environment }}"
        else
          ENV="prod"
        fi
        echo "environment=$ENV" >> $GITHUB_OUTPUT
        echo "📌 Deploying to: $ENV"

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        # package-lock.json wasn't committed; use package.json as dependency path so cache works
        cache-dependency-path: frontend/package.json

    - name: 📦 Install dependencies
      # package-lock.json is not committed; use npm install in CI so dependencies install correctly
      run: npm install --no-audit --no-fund
      working-directory: frontend

    - name: 🏗️ Build Angular app
      run: npm run build
      working-directory: frontend
      env:
        NODE_OPTIONS: "--max_old_space_size=4096"

    - name: 🚀 Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        output_location: "dist/browser"
        skip_app_build: true

    - name: ✅ Deployment Complete
      run: |
        echo "✅ Frontend deployed successfully!"
        echo "🎯 Environment: ${{ steps.env.outputs.environment }}"
